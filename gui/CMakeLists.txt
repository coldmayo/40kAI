cmake_minimum_required(VERSION 3.0)
project(Application)

if (NOT VCPKG_TOOLCHAIN)
  find_package(PkgConfig)
  pkg_check_modules(GTKMM gtkmm-3.0)
  include_directories(${GTKMM_INCLUDE_DIRS})
  link_directories(${GTKMM_LIBRARY_DIRS})
  link_libraries(${GTKMM_LIBRARIES})
else ()
  find_library(ATKMM_LIBRARY atkmm)
  link_libraries(${ATKMM_LIBRARY})
  find_library(CAIROMM_LIBRARY cairomm-1.0)
  link_libraries(${CAIROMM_LIBRARY})
  find_library(GDKMM_LIBRARY gdkmm)
  link_libraries(${GDKMM_LIBRARY})
  find_library(GIOMM_LIBRARY giomm)
  link_libraries(${GIOMM_LIBRARY})
  find_library(GLIBMM_LIBRARY glibmm)
  link_libraries(${GLIBMM_LIBRARY})
  find_library(GTKMM_LIBRARY gtkmm)
  link_libraries(${GTKMM_LIBRARY})
  find_library(PANGOMM_LIBRARY pangomm)
  link_libraries(${PANGOMM_LIBRARY})
  find_library(SIGC_LIBRARY sigc-2.0)
  link_libraries(${SIGC_LIBRARY})
  find_path(GTKMM_INCLUDE_DIRS gtkmm.h)
  include_directories(${GTKMM_INCLUDE_DIRS})
endif ()

if (MSVC)
  set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4250")
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /ENTRY:mainCRTStartup")
endif ()

file(GLOB CONFIG_FILES "${CMAKE_CURRENT_SOURCE_DIR}/img/*")

foreach(CONFIG_FILE ${CONFIG_FILES})
    get_filename_component(CONFIG_FILE_NAME ${CONFIG_FILE} NAME)
    configure_file(${CONFIG_FILE} "${CMAKE_CURRENT_BINARY_DIR}/${CONFIG_FILE_NAME}" COPYONLY)
endforeach()

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
add_executable(Application WIN32 main.cpp Application.cpp popup.cpp)